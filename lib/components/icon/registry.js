var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:true});exports.default=void 0;var _extends2=_interopRequireDefault(require("@babel/runtime/helpers/extends"));var _defineProperty2=_interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));var _toConsumableArray2=_interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));var _slicedToArray2=_interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));var _toArray2=_interopRequireDefault(require("@babel/runtime/helpers/toArray"));var _classCallCheck2=_interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));var _createClass2=_interopRequireDefault(require("@babel/runtime/helpers/createClass"));var _lodash=_interopRequireDefault(require("lodash"));var _antDesignPalettes=require("ant-design-palettes");var normalize=function normalize(id){return _lodash.default.kebabCase(id).toLowerCase();};var IconRegistry=function(){function IconRegistry(){(0,_classCallCheck2.default)(this,IconRegistry);this.aliases={};this.sets={};this.fallbacks={filled:"outlined",outlined:"filled",twoTone:"filled"};this.colorMaps={filled:{fill:["fillColor","strokeColor","color"],stroke:["strokeColor","fillColor","color"]},outlined:{fill:["fillColor",null],stroke:["strokeColor","color"]},twoTone:{fill:["fillColor",function(_ref){var color=_ref.color,strokeColor=_ref.strokeColor;return(0,_antDesignPalettes.generate)(strokeColor||color)[0];}],stroke:["strokeColor","color"]},default:{fill:["fillColor","color"],stroke:["strokeColor","color"]}};}(0,_createClass2.default)(IconRegistry,[{key:"lookupId",value:function lookupId(id){if(this.aliases[id]){id=this.aliases[id];}var _normalize$split=normalize(id).split("-"),_normalize$split2=(0,_toArray2.default)(_normalize$split),prefix=_normalize$split2[0],rest=_normalize$split2.slice(1);return[prefix,rest.join("-")];}},{key:"getSet",value:function getSet(setName){var set=this.sets[setName];if(!set){console.error("No IconSet named \""+setName+"\" is defined.");return null;}return set;}},{key:"getIcon",value:function getIcon(id,set,iconName){var icon=set[iconName];if(!icon){console.error("No Icon named \""+id+"\" is defined.");return null;}return icon;}},{key:"get",value:function get(id){var type=arguments.length>1&&arguments[1]!==undefined?arguments[1]:"outline";var _this$lookupId=this.lookupId(id),_this$lookupId2=(0,_slicedToArray2.default)(_this$lookupId,2),prefix=_this$lookupId2[0],iconName=_this$lookupId2[1];var set=this.getSet(prefix);if(!set){return null;}var icon=this.getIcon(id,set,iconName);if(!icon){return null;}var iconType=icon[type];var fallbacks;if(!iconType){fallbacks=_lodash.default.merge({},this.fallbacks,set.__fallbacks__,icon.__fallbacks__);console.warn("Icon \""+id+"\" does not have a \""+type+"\" type; falling back to \""+fallbacks[type]+"\"");iconType=icon[fallbacks[type]];}if(!iconType){var firstType=Object.keys(icon)[0];if(!firstType){console.error("Icon \""+id+"\" is defined, but empty. Oops.");return null;}console.warn("Icon \""+id+"\" does not have a \""+fallbacks[type]+"\" type; falling back to first type");iconType=icon[firstType];}return iconType;}},{key:"mapColors",value:function mapColors(id,type,colors){var _this$lookupId3=this.lookupId(id),_this$lookupId4=(0,_slicedToArray2.default)(_this$lookupId3,2),prefix=_this$lookupId4[0],iconName=_this$lookupId4[1];var set=this.getSet(prefix);if(!set){return{};}var icon=this.getIcon(id,set,iconName);if(!icon){return{};}var colorMaps=_lodash.default.merge({},this.colorMaps,set.__colorMaps__,icon.__colorMaps__);var colorMap=colorMaps[type];if(!colorMap){console.warn("No \""+type+"\" color map found; using default");colorMap=colorMaps.default;}return _lodash.default.mapValues(colorMap,function(list){return _lodash.default.find(list.map(function(key){return key&&(typeof key==="string"?colors[key]:key(colors));}))||"none";});}},{key:"keys",value:function keys(){return _lodash.default.uniq(_lodash.default.flatten([].concat((0,_toConsumableArray2.default)(_lodash.default.map(this.sets,function(icons,setName){return _lodash.default.keys(icons).filter(function(iconName){return!/^__/.test(iconName);}).map(function(iconName){return setName+"-"+iconName;});})),(0,_toConsumableArray2.default)(_lodash.default.keys(this.aliases))))).sort();}},{key:"register",value:function register(setName,iconName,icon,opts){setName=normalize(setName);if(setName.split("-").length>1){console.error("Could not register IconSet named \""+setName+"\" because it has more than 1 word.");return;}if(!this.sets[setName]){this.sets[setName]={};}var set=this.sets[setName];var icons;var options;if(typeof iconName==="string"){icons=(0,_defineProperty2.default)({},iconName,icon);options=opts||{};}else{icons=iconName;options=icon||{};}(0,_extends2.default)(set,_lodash.default.mapKeys(icons,function(__,key){return normalize(key);}));if(options.aliases){this.alias(options.aliases);}if(options.colorMaps){set.__colorMaps__=options.colorMaps;}if(options.fallbacks){set.__fallbacks__=options.fallbacks;}}},{key:"unregister",value:function unregister(setName){for(var _len=arguments.length,iconNames=new Array(_len>1?_len-1:0),_key=1;_key<_len;_key++){iconNames[_key-1]=arguments[_key];}setName=normalize(setName);if(!iconNames){delete this.sets[setName];return;}var set=this.sets[setName];if(!set){return;}iconNames.forEach(function(iconName){delete set[normalize(iconName)];});}},{key:"alias",value:function alias(aliases){if(typeof aliases==="string"){aliases=(0,_defineProperty2.default)({},aliases,arguments[1]);}(0,_extends2.default)(this.aliases,_lodash.default.mapValues(_lodash.default.mapKeys(aliases,function(__,key){return normalize(key);}),normalize));}},{key:"unalias",value:function unalias(){var _this=this;for(var _len2=arguments.length,iconNames=new Array(_len2),_key2=0;_key2<_len2;_key2++){iconNames[_key2]=arguments[_key2];}iconNames.forEach(function(iconName){delete _this.aliases[normalize(iconName)];});}}]);return IconRegistry;}();var registry=new IconRegistry();var _default=registry;exports.default=_default;